fa07b3941f5a069230f503f4c8792466
"use strict";

var _interopRequireDefault = require("/mnt/c/Users/al/dev/meetup/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _EventNumber = _interopRequireDefault(require("../EventNumber"));

var _jsxFileName = "/mnt/c/Users/al/dev/meetup/src/__tests__/EventNumber.test.js";
describe('<EventNumber /> component', () => {
  let EventNumberWrapper;
  beforeAll(() => {
    EventNumberWrapper = (0, _enzyme.shallow)(_react.default.createElement(_EventNumber.default, {
      updateEvents: () => {},
      __source: {
        fileName: _jsxFileName,
        lineNumber: 11
      },
      __self: void 0
    }));
  });
  test('render textbox element', () => {
    expect(EventNumberWrapper.find('.numberOfEvents')).toHaveLength(1);
  });
  test('show number of events  label', () => {
    expect(EventNumberWrapper.find('.numberOfEvents label')).toHaveLength(1);
  });
  test('render text input', () => {
    expect(EventNumberWrapper.find('.numberOfEvents')).toHaveLength(1);
  });
  test('change state when input changes', () => {
    const eventObject = {
      target: {
        value: 24
      }
    };
    EventNumberWrapper.find('#numberOfEvents__input').simulate('change', eventObject);
    expect(EventNumberWrapper.state('numberOfEvents')).toBe(24);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV2ZW50TnVtYmVyLnRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJFdmVudE51bWJlcldyYXBwZXIiLCJiZWZvcmVBbGwiLCJ0ZXN0IiwiZXhwZWN0IiwiZmluZCIsInRvSGF2ZUxlbmd0aCIsImV2ZW50T2JqZWN0IiwidGFyZ2V0IiwidmFsdWUiLCJzaW11bGF0ZSIsInN0YXRlIiwidG9CZSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOzs7QUFLQUEsUUFBUSxDQUFDLDJCQUFELEVBQThCLE1BQU07QUFDeEMsTUFBSUMsa0JBQUo7QUFDQUMsRUFBQUEsU0FBUyxDQUFDLE1BQU07QUFDWkQsSUFBQUEsa0JBQWtCLEdBQUkscUJBQVEsNkJBQUMsb0JBQUQ7QUFBYSxNQUFBLFlBQVksRUFBRSxNQUFNLENBQUUsQ0FBbkM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTUFBUixDQUF0QjtBQUNILEdBRlEsQ0FBVDtBQUlBRSxFQUFBQSxJQUFJLENBQUMsd0JBQUQsRUFBMkIsTUFBTTtBQUNuQ0MsSUFBQUEsTUFBTSxDQUFDSCxrQkFBa0IsQ0FBQ0ksSUFBbkIsQ0FBd0IsaUJBQXhCLENBQUQsQ0FBTixDQUFtREMsWUFBbkQsQ0FBZ0UsQ0FBaEU7QUFDRCxHQUZHLENBQUo7QUFJQUgsRUFBQUEsSUFBSSxDQUFDLDhCQUFELEVBQWlDLE1BQU07QUFDekNDLElBQUFBLE1BQU0sQ0FBQ0gsa0JBQWtCLENBQUNJLElBQW5CLENBQXdCLHVCQUF4QixDQUFELENBQU4sQ0FBeURDLFlBQXpELENBQXNFLENBQXRFO0FBQ0QsR0FGRyxDQUFKO0FBS0FILEVBQUFBLElBQUksQ0FBQyxtQkFBRCxFQUFzQixNQUFNO0FBQzVCQyxJQUFBQSxNQUFNLENBQUNILGtCQUFrQixDQUFFSSxJQUFwQixDQUF5QixpQkFBekIsQ0FBRCxDQUFOLENBQW9EQyxZQUFwRCxDQUFpRSxDQUFqRTtBQUNELEdBRkMsQ0FBSjtBQUtFSCxFQUFBQSxJQUFJLENBQUMsaUNBQUQsRUFBb0MsTUFBTTtBQUM1QyxVQUFNSSxXQUFXLEdBQUc7QUFBRUMsTUFBQUEsTUFBTSxFQUFFO0FBQUVDLFFBQUFBLEtBQUssRUFBRTtBQUFUO0FBQVYsS0FBcEI7QUFDQVIsSUFBQUEsa0JBQWtCLENBQUNJLElBQW5CLENBQXdCLHdCQUF4QixFQUFrREssUUFBbEQsQ0FBMkQsUUFBM0QsRUFBcUVILFdBQXJFO0FBQ0FILElBQUFBLE1BQU0sQ0FBQ0gsa0JBQWtCLENBQUNVLEtBQW5CLENBQXlCLGdCQUF6QixDQUFELENBQU4sQ0FBbURDLElBQW5ELENBQXdELEVBQXhEO0FBQ0QsR0FKRyxDQUFKO0FBU0wsQ0E3Qk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHNoYWxsb3cgfSBmcm9tICdlbnp5bWUnO1xyXG5pbXBvcnQgRXZlbnROdW1iZXIgZnJvbSAnLi4vRXZlbnROdW1iZXInO1xyXG5cclxuXHJcblxyXG5cclxuZGVzY3JpYmUoJzxFdmVudE51bWJlciAvPiBjb21wb25lbnQnLCAoKSA9PiB7XHJcbiAgICBsZXQgRXZlbnROdW1iZXJXcmFwcGVyIDtcclxuICAgIGJlZm9yZUFsbCgoKSA9PiB7XHJcbiAgICAgICAgRXZlbnROdW1iZXJXcmFwcGVyICA9IHNoYWxsb3coPEV2ZW50TnVtYmVyIHVwZGF0ZUV2ZW50cz17KCkgPT4ge319ICAvPik7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0ZXN0KCdyZW5kZXIgdGV4dGJveCBlbGVtZW50JywgKCkgPT4ge1xyXG4gICAgICBleHBlY3QoRXZlbnROdW1iZXJXcmFwcGVyLmZpbmQoJy5udW1iZXJPZkV2ZW50cycpKS50b0hhdmVMZW5ndGgoMSk7XHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgdGVzdCgnc2hvdyBudW1iZXIgb2YgZXZlbnRzICBsYWJlbCcsICgpID0+IHtcclxuICAgICAgZXhwZWN0KEV2ZW50TnVtYmVyV3JhcHBlci5maW5kKCcubnVtYmVyT2ZFdmVudHMgbGFiZWwnKSkudG9IYXZlTGVuZ3RoKDEpO1xyXG4gICAgfSk7XHJcblxyXG5cclxuICAgIHRlc3QoJ3JlbmRlciB0ZXh0IGlucHV0JywgKCkgPT4ge1xyXG4gICAgICAgIGV4cGVjdChFdmVudE51bWJlcldyYXBwZXIgLmZpbmQoJy5udW1iZXJPZkV2ZW50cycpKS50b0hhdmVMZW5ndGgoMSk7XHJcbiAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgIHRlc3QoJ2NoYW5nZSBzdGF0ZSB3aGVuIGlucHV0IGNoYW5nZXMnLCAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgZXZlbnRPYmplY3QgPSB7IHRhcmdldDogeyB2YWx1ZTogMjQgfX07XHJcbiAgICAgICAgRXZlbnROdW1iZXJXcmFwcGVyLmZpbmQoJyNudW1iZXJPZkV2ZW50c19faW5wdXQnKS5zaW11bGF0ZSgnY2hhbmdlJywgZXZlbnRPYmplY3QpO1xyXG4gICAgICAgIGV4cGVjdChFdmVudE51bWJlcldyYXBwZXIuc3RhdGUoJ251bWJlck9mRXZlbnRzJykpLnRvQmUoMjQpO1xyXG4gICAgICB9KTtcclxuICAgIFxyXG5cclxuICAgXHJcbiAgICAgIFxyXG59KTtcclxuXHJcblxyXG4iXX0=