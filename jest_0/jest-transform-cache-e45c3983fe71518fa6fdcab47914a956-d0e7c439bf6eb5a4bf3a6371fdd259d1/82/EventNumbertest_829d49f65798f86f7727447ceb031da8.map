{"version":3,"sources":["EventNumber.test.js"],"names":["describe","EventNumberWrapper","beforeAll","test","expect","find","toHaveLength","eventObject","target","value","simulate","state","toBe"],"mappings":";;;;AAAA;;AACA;;AACA;;;AAKAA,QAAQ,CAAC,2BAAD,EAA8B,MAAM;AACxC,MAAIC,kBAAJ;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZD,IAAAA,kBAAkB,GAAI,qBAAQ,6BAAC,oBAAD;AAAa,MAAA,YAAY,EAAE,MAAM,CAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAAtB;AACH,GAFQ,CAAT;AAIAE,EAAAA,IAAI,CAAC,wBAAD,EAA2B,MAAM;AACnCC,IAAAA,MAAM,CAACH,kBAAkB,CAACI,IAAnB,CAAwB,iBAAxB,CAAD,CAAN,CAAmDC,YAAnD,CAAgE,CAAhE;AACD,GAFG,CAAJ;AAIAH,EAAAA,IAAI,CAAC,8BAAD,EAAiC,MAAM;AACzCC,IAAAA,MAAM,CAACH,kBAAkB,CAACI,IAAnB,CAAwB,uBAAxB,CAAD,CAAN,CAAyDC,YAAzD,CAAsE,CAAtE;AACD,GAFG,CAAJ;AAKAH,EAAAA,IAAI,CAAC,mBAAD,EAAsB,MAAM;AAC5BC,IAAAA,MAAM,CAACH,kBAAkB,CAAEI,IAApB,CAAyB,iBAAzB,CAAD,CAAN,CAAoDC,YAApD,CAAiE,CAAjE;AACD,GAFC,CAAJ;AAKEH,EAAAA,IAAI,CAAC,iCAAD,EAAoC,MAAM;AAC5C,UAAMI,WAAW,GAAG;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAV,KAApB;AACAR,IAAAA,kBAAkB,CAACI,IAAnB,CAAwB,wBAAxB,EAAkDK,QAAlD,CAA2D,QAA3D,EAAqEH,WAArE;AACAH,IAAAA,MAAM,CAACH,kBAAkB,CAACU,KAAnB,CAAyB,gBAAzB,CAAD,CAAN,CAAmDC,IAAnD,CAAwD,EAAxD;AACD,GAJG,CAAJ;AASL,CA7BO,CAAR","sourcesContent":["import React from 'react';\r\nimport { shallow } from 'enzyme';\r\nimport EventNumber from '../EventNumber';\r\n\r\n\r\n\r\n\r\ndescribe('<EventNumber /> component', () => {\r\n    let EventNumberWrapper ;\r\n    beforeAll(() => {\r\n        EventNumberWrapper  = shallow(<EventNumber updateEvents={() => {}}  />);\r\n    });\r\n\r\n    test('render textbox element', () => {\r\n      expect(EventNumberWrapper.find('.numberOfEvents')).toHaveLength(1);\r\n    });\r\n    \r\n    test('show number of events  label', () => {\r\n      expect(EventNumberWrapper.find('.numberOfEvents label')).toHaveLength(1);\r\n    });\r\n\r\n\r\n    test('render text input', () => {\r\n        expect(EventNumberWrapper .find('.numberOfEvents')).toHaveLength(1);\r\n      });\r\n\r\n\r\n      test('change state when input changes', () => {\r\n        const eventObject = { target: { value: 24 }};\r\n        EventNumberWrapper.find('#numberOfEvents__input').simulate('change', eventObject);\r\n        expect(EventNumberWrapper.state('numberOfEvents')).toBe(24);\r\n      });\r\n    \r\n\r\n   \r\n      \r\n});\r\n\r\n\r\n"]}