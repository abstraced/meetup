650fd48e1f35260428b5ffbccc14c563
"use strict";

var _interopRequireWildcard = require("/mnt/c/Users/al/dev/meetup/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/mnt/c/Users/al/dev/meetup/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

require("./App.css");

var _EventList = _interopRequireDefault(require("./EventList"));

var _CitySearch = _interopRequireDefault(require("./CitySearch"));

var _EventNumber = _interopRequireDefault(require("./EventNumber"));

var _api = require("./api");

var _jsxFileName = "/mnt/c/Users/al/dev/meetup/src/App.js";

class App extends _react.Component {
  constructor(...args) {
    super(...args);
    this.state = {
      events: [],
      page: null,
      lat: null,
      lon: null
    };

    this.updateEvents = (lat, lon, page) => {
      if (lat && lon) {
        (0, _api.getEvents)(lat, lon, this.state.page).then(response => this.setState({
          events: response.events,
          lat: lat,
          lon: lon
        }));
      } else if (page) {
        (0, _api.getEvents)(this.state.lat, this.state.lon, page).then(response => this.setState({
          events: response.events,
          page: page
        }));
      } else {
        (0, _api.getEvents)(this.state.lat, this.state.lon, this.state.page).then(response => this.setState({
          events: response.events
        }));
      }
    };
  }

  componentDidMount() {
    (0, _api.getEvents)().then(response => this.setState({
      events: response.events
    }));
  }

  render() {
    return _react.default.createElement("div", {
      className: "App",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 44
      },
      __self: this
    }, _react.default.createElement(_CitySearch.default, {
      updateEvents: this.updateEvents,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 45
      },
      __self: this
    }), _react.default.createElement(_EventNumber.default, {
      updateEvents: this.updateEvents,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 46
      },
      __self: this
    }), _react.default.createElement(_EventList.default, {
      events: this.state.events,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 47
      },
      __self: this
    }));
  }

}

var _default = App;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFwcC5qcyJdLCJuYW1lcyI6WyJBcHAiLCJDb21wb25lbnQiLCJzdGF0ZSIsImV2ZW50cyIsInBhZ2UiLCJsYXQiLCJsb24iLCJ1cGRhdGVFdmVudHMiLCJ0aGVuIiwicmVzcG9uc2UiLCJzZXRTdGF0ZSIsImNvbXBvbmVudERpZE1vdW50IiwicmVuZGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUdBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsTUFBTUEsR0FBTixTQUFrQkMsZ0JBQWxCLENBQTRCO0FBQUE7QUFBQTtBQUFBLFNBUzFCQyxLQVQwQixHQVNsQjtBQUNOQyxNQUFBQSxNQUFNLEVBQUUsRUFERjtBQUVOQyxNQUFBQSxJQUFJLEVBQUUsSUFGQTtBQUdOQyxNQUFBQSxHQUFHLEVBQUUsSUFIQztBQUlOQyxNQUFBQSxHQUFHLEVBQUU7QUFKQyxLQVRrQjs7QUFBQSxTQWdCMUJDLFlBaEIwQixHQWdCWCxDQUFDRixHQUFELEVBQU1DLEdBQU4sRUFBV0YsSUFBWCxLQUFvQjtBQUNqQyxVQUFHQyxHQUFHLElBQUlDLEdBQVYsRUFBZTtBQUNiLDRCQUFVRCxHQUFWLEVBQWVDLEdBQWYsRUFBb0IsS0FBS0osS0FBTCxDQUFXRSxJQUEvQixFQUNDSSxJQURELENBQ01DLFFBQVEsSUFBSSxLQUFLQyxRQUFMLENBQWM7QUFBRVAsVUFBQUEsTUFBTSxFQUFFTSxRQUFRLENBQUNOLE1BQW5CO0FBQTJCRSxVQUFBQSxHQUFHLEVBQUVBLEdBQWhDO0FBQXFDQyxVQUFBQSxHQUFHLEVBQUVBO0FBQTFDLFNBQWQsQ0FEbEI7QUFFRCxPQUhELE1BS0ssSUFBSUYsSUFBSixFQUFVO0FBQ2IsNEJBQVUsS0FBS0YsS0FBTCxDQUFXRyxHQUFyQixFQUEwQixLQUFLSCxLQUFMLENBQVdJLEdBQXJDLEVBQTBDRixJQUExQyxFQUNDSSxJQURELENBQ01DLFFBQVEsSUFBSSxLQUFLQyxRQUFMLENBQWM7QUFBRVAsVUFBQUEsTUFBTSxFQUFFTSxRQUFRLENBQUNOLE1BQW5CO0FBQTJCQyxVQUFBQSxJQUFJLEVBQUVBO0FBQWpDLFNBQWQsQ0FEbEI7QUFFRCxPQUhJLE1BSUE7QUFDSCw0QkFBVSxLQUFLRixLQUFMLENBQVdHLEdBQXJCLEVBQTBCLEtBQUtILEtBQUwsQ0FBV0ksR0FBckMsRUFBMEMsS0FBS0osS0FBTCxDQUFXRSxJQUFyRCxFQUNDSSxJQURELENBQ01DLFFBQVEsSUFBSSxLQUFLQyxRQUFMLENBQWM7QUFBRVAsVUFBQUEsTUFBTSxFQUFFTSxRQUFRLENBQUNOO0FBQW5CLFNBQWQsQ0FEbEI7QUFFRDtBQUNGLEtBOUJ5QjtBQUFBOztBQUsxQlEsRUFBQUEsaUJBQWlCLEdBQUc7QUFDbEIsMEJBQVlILElBQVosQ0FBaUJDLFFBQVEsSUFBSSxLQUFLQyxRQUFMLENBQWM7QUFBRVAsTUFBQUEsTUFBTSxFQUFFTSxRQUFRLENBQUNOO0FBQW5CLEtBQWQsQ0FBN0I7QUFDRDs7QUF5QkRTLEVBQUFBLE1BQU0sR0FBRztBQUNQLFdBQ0U7QUFBSyxNQUFBLFNBQVMsRUFBQyxLQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE9BQ0UsNkJBQUMsbUJBQUQ7QUFBWSxNQUFBLFlBQVksRUFBRSxLQUFLTCxZQUEvQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxNQURGLEVBRUUsNkJBQUMsb0JBQUQ7QUFBYSxNQUFBLFlBQVksRUFBRSxLQUFLQSxZQUFoQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxNQUZGLEVBR0UsNkJBQUMsa0JBQUQ7QUFBVyxNQUFBLE1BQU0sRUFBRSxLQUFLTCxLQUFMLENBQVdDLE1BQTlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE1BSEYsQ0FERjtBQVFEOztBQXpDeUI7O2VBNENiSCxHIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0ICcuL0FwcC5jc3MnO1xyXG5cclxuXHJcbmltcG9ydCBFdmVudExpc3QgZnJvbSAnLi9FdmVudExpc3QnO1xyXG5pbXBvcnQgQ2l0eVNlYXJjaCBmcm9tICcuL0NpdHlTZWFyY2gnO1xyXG5pbXBvcnQgRXZlbnROdW1iZXIgZnJvbSAnLi9FdmVudE51bWJlcic7XHJcbmltcG9ydCB7IGdldEV2ZW50cyB9IGZyb20gJy4vYXBpJztcclxuXHJcbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XHJcblxyXG4gIFxyXG5cclxuXHJcbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICBnZXRFdmVudHMoKS50aGVuKHJlc3BvbnNlID0+IHRoaXMuc2V0U3RhdGUoeyBldmVudHM6IHJlc3BvbnNlLmV2ZW50cyB9KSk7XHJcbiAgfVxyXG5cclxuICBzdGF0ZSA9IHtcclxuICAgIGV2ZW50czogW10sXHJcbiAgICBwYWdlOiBudWxsLFxyXG4gICAgbGF0OiBudWxsLFxyXG4gICAgbG9uOiBudWxsXHJcbiAgfVxyXG5cclxuICB1cGRhdGVFdmVudHMgPSAobGF0LCBsb24sIHBhZ2UpID0+IHtcclxuICAgIGlmKGxhdCAmJiBsb24pIHtcclxuICAgICAgZ2V0RXZlbnRzKGxhdCwgbG9uLCB0aGlzLnN0YXRlLnBhZ2UpXHJcbiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHRoaXMuc2V0U3RhdGUoeyBldmVudHM6IHJlc3BvbnNlLmV2ZW50cywgbGF0OiBsYXQsIGxvbjogbG9uIH0pKTtcclxuICAgIH1cclxuXHJcbiAgICBlbHNlIGlmIChwYWdlKSB7XHJcbiAgICAgIGdldEV2ZW50cyh0aGlzLnN0YXRlLmxhdCwgdGhpcy5zdGF0ZS5sb24sIHBhZ2UpXHJcbiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHRoaXMuc2V0U3RhdGUoeyBldmVudHM6IHJlc3BvbnNlLmV2ZW50cywgcGFnZTogcGFnZSB9KSk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgZ2V0RXZlbnRzKHRoaXMuc3RhdGUubGF0LCB0aGlzLnN0YXRlLmxvbiwgdGhpcy5zdGF0ZS5wYWdlKVxyXG4gICAgICAudGhlbihyZXNwb25zZSA9PiB0aGlzLnNldFN0YXRlKHsgZXZlbnRzOiByZXNwb25zZS5ldmVudHMgfSkpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJBcHBcIj5cclxuICAgICAgICA8Q2l0eVNlYXJjaCB1cGRhdGVFdmVudHM9e3RoaXMudXBkYXRlRXZlbnRzfSAvPlxyXG4gICAgICAgIDxFdmVudE51bWJlciB1cGRhdGVFdmVudHM9e3RoaXMudXBkYXRlRXZlbnRzfSAgLz5cclxuICAgICAgICA8RXZlbnRMaXN0IGV2ZW50cz17dGhpcy5zdGF0ZS5ldmVudHN9IC8+XHJcbiAgICAgICAgXHJcbiAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFwcDsiXX0=